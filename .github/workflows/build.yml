name: Build
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build-linux:
    strategy:
      matrix:
        cc: [gcc, clang]

    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install libglfw3-dev make python3 python3-pip gcc clang -y

    - name: Install Python Modules
      run: python3 -m pip install --upgrade Pillow

    - name: Generate Build Files
      run: make gen-assets

    - name: Build (gcc)
      if: ${{ matrix.cc == 'gcc' }}
      run: make all -j4 BUILD_TYPE=release CC=gcc CXX=g++

    - name: Build (clang)
      if: ${{ matrix.cc == 'clang' }}
      run: make all -j4 BUILD_TYPE=release CC=clang CXX=clang++

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-linux-${{ matrix.cc }}
        if-no-files-found: error
        path: ./build/csprite

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Msys2
      uses: msys2/setup-msys2@v2
      with:
        cache: true
        msystem: mingw64
        install: mingw-w64-x86_64-python mingw-w64-x86_64-python-pillow mingw-w64-x86_64-make mingw-w64-x86_64-gcc mingw-w64-x86_64-glfw

    - name: Generate Build Files & Build
      shell: msys2 {0}
      run: |
        mingw32-make gen-assets
        mingw32-make all -j4 BUILD_TYPE=release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-windows
        if-no-files-found: error
        path: ./build/csprite.exe
