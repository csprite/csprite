name: ci
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  generate-assets:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Generate Asset
      run: |
        python3 -m pip install --upgrade Pillow
        python3 -m pip install --upgrade numpy
        make gen-assets

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: data
        path: ./data/
        if-no-files-found: error

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: src-assets
        path: ./src/assets/
        if-no-files-found: error

  linux-x86_64:
    needs: [generate-assets]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [
          { cc: gcc, cxx: g++, toolchain: gnu },
          { cc: clang, cxx: clang++, toolchain: clang }
        ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/download-artifact@v2
      with:
        name: src-assets
        path: ./src/assets/

    - uses: actions/download-artifact@v2
      with:
        name: data
        path: ./data/

    - name: Install Deps
      run: |
        sudo apt-get update
        sudo apt-get install gcc clang cmake ninja-build zlib1g zlib1g-dev libfuse2
        wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.0-beta.1/appimage-builder-1.0.0-677acbd-x86_64.AppImage
        chmod +x appimage-builder-x86_64.AppImage
        sudo mv appimage-builder-x86_64.AppImage /usr/local/bin/appimage-builder

    - name: Build & Install SDL2
      run: |
        set CC=${{ matrix.compile.cc }}
        set CXX=${{ matrix.compile.cxx }}
        git clone https://github.com/libsdl-org/SDL/ -b release-2.26.5
        cd SDL/
        cmake -S ./ -B ./build/ -DCMAKE_BUILD_TYPE=Release -G "Ninja"
        cmake --build ./build/ --config Release --parallel 3
        sudo cmake --install ./build/ --strip --config Release

    - name: Generate Build Files & Build
      run: |
        set CC=${{ matrix.compile.cc }}
        set CXX=${{ matrix.compile.cxx }}
        cmake -S ./ -B ./build/ -DCMAKE_BUILD_TYPE=Release -G "Ninja"
        cmake --build ./build/ --config Release --parallel 3
        mv ./build/csprite ./

    - name: Build AppImage
      run: |
        make appimage
        mv ./csprite-*.AppImage ./csprite-x86_64.AppImage

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux_appimage-x86_64-${{ matrix.compile.toolchain }}
        path: csprite-x86_64.AppImage
        if-no-files-found: error

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux-x86_64-${{ matrix.compile.toolchain }}
        path: ./csprite
        if-no-files-found: error

  windows-x86_64:
    needs: [generate-assets]
    runs-on: windows-2022
    strategy:
      matrix:
        architecture: [x64, Win32]
        generator: [ { short_name: "vs17_2022", cmake_name: "Visual Studio 17 2022" } ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/download-artifact@v2
      with:
        name: src-assets
        path: ./src/assets/

    - uses: actions/download-artifact@v2
      with:
        name: data
        path: ./data/

    - name: Build & Install ZLib
      run: |
        git clone https://github.com/madler/zlib/ --recursive -b v1.2.13
        cd zlib/
        cmake -S ./ -B ./build/ -DCMAKE_BUILD_TYPE=Release -G "${{ matrix.generator.cmake_name }}" -A "${{ matrix.architecture }}"
        cmake --build ./build/ --config Release --parallel 3
        cmake --install ./build/ --strip --config Release

    - name: Build & Install SDL2
      run: |
        git clone https://github.com/libsdl-org/SDL/ -b release-2.26.5
        cd SDL/
        cmake -S ./ -B ./build/ -DCMAKE_BUILD_TYPE=Release -G "${{ matrix.generator.cmake_name }}" -A "${{ matrix.architecture }}"
        cmake --build ./build/ --config Release --parallel 3
        cmake --install ./build/ --strip --config Release

    - name: Generate Build Files & Build
      run: |
        make gen-rc ARCH=${{ matrix.architecture }} MajVer=1 MinVer=0 PatVer=0
        cmake -S ./ -B ./build/ -DCMAKE_BUILD_TYPE=Release -G "${{ matrix.generator.cmake_name }}" -A "${{ matrix.architecture }}"
        cmake --build ./build/ --config Release --parallel 3

    - name: Zip Binaries
      run: |
        mv ./build/Release/ ./build/csprite/
        zip -r ./build/csprite/ ./csprite.zip

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: win-${{ matrix.architecture }}-${{ matrix.generator.short_name }}
        if-no-files-found: error
        path: ./csprite.zip

  osx_x86_64:
    needs: [generate-assets]
    runs-on: macos-12 # Monterey
    strategy:
      matrix:
        architecture: [x86_64, arm64]
        generator: [Xcode]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/download-artifact@v2
      with:
        name: src-assets
        path: ./src/assets/

    - uses: actions/download-artifact@v2
      with:
        name: data
        path: ./data/

    - name: Lint Info.plist
      run: plutil data/Info.plist

    - name: Install dylibbundler, SDL2 & zlib
      run: |
        PACKAGES=(dylibbundler sdl2 zlib)
        for PACKAGE in "${PACKAGES[@]}"
        do
          formulaResult=$(brew --cache --bottle-tag=${{ matrix.architecture }}_monterey $PACKAGE)
          brew fetch --force --bottle-tag=${{ matrix.architecture }}_monterey $PACKAGE
          brew install $formulaResult
        done

    - name: Generate .icns
      run: |
        mkdir csprite.iconset
        sips -z 16 16     data/icon-scaled.png --out csprite.iconset/icon_16x16.png
        sips -z 32 32     data/icon-scaled.png --out csprite.iconset/icon_16x16@2x.png
        sips -z 32 32     data/icon-scaled.png --out csprite.iconset/icon_32x32.png
        sips -z 64 64     data/icon-scaled.png --out csprite.iconset/icon_32x32@2x.png
        sips -z 128 128   data/icon-scaled.png --out csprite.iconset/icon_128x128.png
        sips -z 256 256   data/icon-scaled.png --out csprite.iconset/icon_128x128@2x.png
        sips -z 256 256   data/icon-scaled.png --out csprite.iconset/icon_256x256.png
        sips -z 512 512   data/icon-scaled.png --out csprite.iconset/icon_256x256@2x.png
        sips -z 512 512   data/icon-scaled.png --out csprite.iconset/icon_512x512.png
        cp data/icon-scaled.png csprite.iconset/icon_512x512@2x.png
        iconutil -c icns -o csprite.icns csprite.iconset
        rm -R csprite.iconset

    - name: Generate Build Files & Build
      run: |
        cmake -S ./ -B ./build/ -DCMAKE_BUILD_TYPE=Release -DBUILD_APPLE_BUNDLE=ON -G "${{ matrix.generator }}" -DCMAKE_OSX_ARCHITECTURES=${{ matrix.architecture }}
        cmake --build ./build/ --config Release

    - name: Create Zip
      run: zip -r csprite.zip ./build/Release/csprite.app/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: osx-${{ matrix.architecture }}-${{ matrix.generator }}
        path: ./csprite.zip
        if-no-files-found: error

  update-ci-release:
    needs: [linux-x86_64, windows-x86_64, osx_x86_64]
    permissions:
      contents: write
    if: |
      github.event_name == 'push' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        tag_name: latest-git
        delete_release: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/download-artifact@v2
      with:
        name: win-x86_64-vs17_2022
        path: ./win-x86_64-vs17_2022/

    - uses: actions/download-artifact@v2
      with:
        name: win-Win32-vs17_2022
        path: ./win-Win32-vs17_2022/

    - uses: actions/download-artifact@v2
      with:
        name: linux_appimage-x86_64-clang
        path: ./linux_appimage-x86_64-clang/

    - uses: actions/download-artifact@v2
      with:
        name: linux-x86_64-clang
        path: ./linux-x86_64-clang/

    - uses: actions/download-artifact@v2
      with:
        name: linux_appimage-x86_64-gnu
        path: ./linux_appimage-x86_64-gnu/

    - uses: actions/download-artifact@v2
      with:
        name: linux-x86_64-gnu
        path: ./linux-x86_64-gnu/

    - uses: actions/download-artifact@v2
      with:
        name: osx-arm64-Xcode
        path: ./osx-arm64-Xcode/

    - uses: actions/download-artifact@v2
      with:
        name: osx-x86_64-Xcode
        path: ./osx-x86_64-Xcode/

    - name: Rename
      run: |
        mv ./win-x86_64-vs17_2022/csprite.zip ./win-x64-vs17_2022.zip
        mv ./win-Win32-vs17_2022/csprite.zip ./win-x86-vs17_2022.zip

        mv ./linux_appimage-x86_64-clang/*.appimage ./linux-x64-clangtoolchain.appimage
        mv ./linux-x86_64-clang/csprite ./linux-x64-clangtoolchain

        mv ./linux_appimage-x86_64-gnu/*.appimage ./linux-x64-gnutoolchain.appimage
        mv ./linux-x86_64-gnu/csprite ./linux-x64-gnutoolchain

        mv ./osx-arm64-Xcode/csprite.zip ./osx-arm64-Xcode.zip
        mv ./osx-x86_64-Xcode/csprite.zip ./osx-x64-Xcode.zip

    - uses: ncipollo/release-action@v1
      with:
        name: "Csprite Latest Git"
        body: "this release is not for daily use."
        tag: "latest-git"
        commit: "master"
        prerelease: true
        allowUpdates: true
        generateReleaseNotes: true
        artifactErrorsFailBuild: true
        artifacts: |
          ./win-x64-vs17_2022.zip
          ./win-x86-vs17_2022.zip

          ./linux-x64-gnutoolchain.appimage
          ./linux-x64-gnutoolchain

          ./linux-x64-clangtoolchain.appimage
          ./linux-x64-clangtoolchain

          ./osx-arm64-Xcode.zip
          ./osx-x64-Xcode.zip
